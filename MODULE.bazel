git_override(module_name = "rules_pycross", remote = "https://github.com/jvolkman/rules_pycross", commit = "ed894bafe820bc4cc5e97ed8bc4ed61c44949e28")

bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name = "hermetic_cc_toolchain", version = "2.1.2")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_python", version = "0.29.0")
bazel_dep(name = "rules_rust", version = "0.27.0")
bazel_dep(name = "rules_pycross", version = "0.5.1")

cc = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(cc, cc_toolchains = "zig_sdk")

register_toolchains("@cc_toolchains//toolchain:all")

py = use_extension("@rules_python//python/extensions:python.bzl", "python")
py.toolchain(
    is_default = True,
    python_version = "3.9",
)

rs = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rs.toolchain(
    edition = "2021",
)
use_repo(rs, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

env = use_extension("@rules_pycross//pycross/extensions:environments.bzl", "environments")
use_repo(env, "pycross_environments")

# Use the lock_import extension to import external lock files.
lock_import = use_extension("@rules_pycross//pycross/extensions:lock_import.bzl", "lock_import")

# Import from PDM
# lock_import.import_pdm(
#     lock_file = "//:pdm.lock",
#     project_file = "//:pyproject.toml",
#     repo = "pdm_deps",
# )

# Import from Poetry
lock_import.import_poetry(
    lock_file = "//toolchain/python/poetry:poetry.lock",
    project_file = "//toolchain/python/poetry:pyproject.toml",
    repo = "pip",
)

# The actual repos are loaded from the lock_repos extension.
lock_repos = use_extension("@rules_pycross//pycross/extensions:lock_repos.bzl", "lock_repos")
use_repo(lock_repos, "pip")

lock_file = use_extension("@rules_pycross//pycross/extensions:lock_file.bzl", "lock_file")
lock_file.instantiate(
    name = "poetry_lock_file",
    lock_file = "//toolchain/python/poetry:poetry_lock.bzl",
)
use_repo(lock_file, "poetry_lock_file")
